{"ast":null,"code":"import _defineProperty from \"C:/code/Udrink/udrinkfront/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport auth0 from 'auth0-js';\nimport EventEmitter from 'eventemitter3';\nimport router from './../router';\nexport default class AuthService {\n  constructor() {\n    _defineProperty(this, \"authenticated\", this.isAuthenticated());\n    _defineProperty(this, \"authNotifier\", new EventEmitter());\n    // create an instance of auth0.WebAuth with your\n    // API and Client credentials\n    _defineProperty(this, \"auth0\", new auth0.WebAuth({\n      domain: 'authudrink.uk.auth0.com',\n      clientID: 'rjipTsJARDo6UfLfCc3VCJVzCjm5NZeO',\n      redirectUri: '<YOUR_CALLBACK_URL>',\n      audience: 'https://authudrink.uk.auth0.com/api/v2/',\n      responseType: 'token id_token',\n      scope: 'openid profile'\n    }));\n    this.login = this.login.bind(this);\n    this.setSession = this.setSession.bind(this);\n    this.logout = this.logout.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n  }\n  // this method calls the authorize() method\n  // which triggers the Auth0 login page\n  login() {\n    this.auth0.authorize();\n  }\n\n  // this method calls the parseHash() method of Auth0\n  // to get authentication information from the callback URL\n  handleAuthentication() {\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        this.setSession(authResult);\n      } else if (err) {\n        console.log(err);\n        alert(`Error: ${err.error}. Check the console for further details.`);\n      }\n      router.replace('/');\n    });\n  }\n\n  // stores the user's access_token, id_token, and a time at\n  // which the access_token will expire in the local storage\n  setSession(authResult) {\n    this.accessToken = authResult.accessToken;\n    this.idToken = authResult.idToken;\n    this.profile = authResult.idTokenPayload;\n    this.expiresAt = authResult.expiresIn * 1000 + new Date().getTime();\n    this.authNotifier.emit('authChange', {\n      authenticated: true\n    });\n  }\n\n  // remove the access and ID tokens from the\n  // local storage and emits the authChange event\n  logout() {\n    delete this.accessToken;\n    delete this.idToken;\n    delete this.expiresAt;\n    this.authNotifier.emit('authChange', false);\n    // navigate to the home route\n    router.replace('/');\n  }\n\n  // checks if the user is authenticated\n  isAuthenticated() {\n    // Check whether the current time is past the\n    // access token's expiry time\n    return new Date().getTime() < this.expiresAt;\n  }\n\n  // a static method to get the access token\n  getAuthToken() {\n    return this.accessToken;\n  }\n\n  // a method to get the User profile\n  getUserProfile() {\n    return this.profile;\n  }\n}","map":{"version":3,"names":["auth0","EventEmitter","router","AuthService","constructor","_defineProperty","isAuthenticated","WebAuth","domain","clientID","redirectUri","audience","responseType","scope","login","bind","setSession","logout","handleAuthentication","authorize","parseHash","err","authResult","accessToken","idToken","console","log","alert","error","replace","profile","idTokenPayload","expiresAt","expiresIn","Date","getTime","authNotifier","emit","authenticated","getAuthToken","getUserProfile"],"sources":["C:/code/Udrink/udrinkfront/src/auth/AuthService.js"],"sourcesContent":["import auth0 from 'auth0-js'\r\nimport EventEmitter from 'eventemitter3'\r\nimport router from './../router'\r\n\r\nexport default class AuthService {\r\n  authenticated = this.isAuthenticated()\r\n  authNotifier = new EventEmitter()\r\n\r\n  constructor () {\r\n    this.login = this.login.bind(this)\r\n    this.setSession = this.setSession.bind(this)\r\n    this.logout = this.logout.bind(this)\r\n    this.isAuthenticated = this.isAuthenticated.bind(this)\r\n    this.handleAuthentication = this.handleAuthentication.bind(this)\r\n  }\r\n\r\n  // create an instance of auth0.WebAuth with your\r\n  // API and Client credentials\r\n  auth0 = new auth0.WebAuth({\r\n    domain: 'authudrink.uk.auth0.com',\r\n    clientID: 'rjipTsJARDo6UfLfCc3VCJVzCjm5NZeO',\r\n    redirectUri: '<YOUR_CALLBACK_URL>',\r\n    audience: 'https://authudrink.uk.auth0.com/api/v2/',\r\n    responseType: 'token id_token',\r\n    scope: 'openid profile'\r\n  })\r\n\r\n  // this method calls the authorize() method\r\n  // which triggers the Auth0 login page\r\n  login () {\r\n    this.auth0.authorize()\r\n  }\r\n\r\n  // this method calls the parseHash() method of Auth0\r\n  // to get authentication information from the callback URL\r\n  handleAuthentication () {\r\n    this.auth0.parseHash((err, authResult) => {\r\n      if (authResult && authResult.accessToken && authResult.idToken) {\r\n        this.setSession(authResult)\r\n      } else if (err) {\r\n        console.log(err)\r\n        alert(`Error: ${err.error}. Check the console for further details.`)\r\n      }\r\n      router.replace('/')\r\n    })\r\n  }\r\n\r\n  // stores the user's access_token, id_token, and a time at\r\n  // which the access_token will expire in the local storage\r\n  setSession (authResult) {\r\n    this.accessToken = authResult.accessToken\r\n    this.idToken = authResult.idToken\r\n    this.profile = authResult.idTokenPayload\r\n    this.expiresAt = authResult.expiresIn * 1000 + new Date().getTime()\r\n    this.authNotifier.emit('authChange', {authenticated: true})\r\n  }\r\n\r\n  // remove the access and ID tokens from the\r\n  // local storage and emits the authChange event\r\n  logout () {\r\n    delete this.accessToken\r\n    delete this.idToken\r\n    delete this.expiresAt\r\n    this.authNotifier.emit('authChange', false)\r\n    // navigate to the home route\r\n    router.replace('/')\r\n  }\r\n\r\n  // checks if the user is authenticated\r\n  isAuthenticated () {\r\n    // Check whether the current time is past the\r\n    // access token's expiry time\r\n    return new Date().getTime() < this.expiresAt\r\n  }\r\n\r\n  // a static method to get the access token\r\n  getAuthToken () {\r\n    return this.accessToken\r\n  }\r\n\r\n  // a method to get the User profile\r\n  getUserProfile () {\r\n    return this.profile\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}